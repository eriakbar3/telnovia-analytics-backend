"""Implement team-based ownership for notebooks and data sources

Revision ID: 65ba48c07b1f
Revises: 8c100c6b6aa7
Create Date: 2025-08-22 02:16:04.125609

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '65ba48c07b1f'
down_revision: Union[str, Sequence[str], None] = '8c100c6b6aa7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_index(op.f('ix_teams_name'), 'teams', ['name'], unique=False)
    op.create_table('team_memberships',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'editor', 'viewer', name='roleenum'), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'team_id')
    )
    op.add_column('data_source_connections', sa.Column('team_id', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('data_source_connections_owner_id_fkey'), 'data_source_connections', type_='foreignkey')
    op.create_foreign_key(None, 'data_source_connections', 'teams', ['team_id'], ['id'])
    op.drop_column('data_source_connections', 'owner_id')
    op.add_column('notebooks', sa.Column('team_id', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('notebooks_owner_id_fkey'), 'notebooks', type_='foreignkey')
    op.create_foreign_key(None, 'notebooks', 'teams', ['team_id'], ['id'])
    op.drop_column('notebooks', 'owner_id')
    op.drop_column('notebooks', 'description')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notebooks', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('notebooks', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'notebooks', type_='foreignkey')
    op.create_foreign_key(op.f('notebooks_owner_id_fkey'), 'notebooks', 'users', ['owner_id'], ['id'])
    op.drop_column('notebooks', 'team_id')
    op.add_column('data_source_connections', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'data_source_connections', type_='foreignkey')
    op.create_foreign_key(op.f('data_source_connections_owner_id_fkey'), 'data_source_connections', 'users', ['owner_id'], ['id'])
    op.drop_column('data_source_connections', 'team_id')
    op.drop_table('team_memberships')
    op.drop_index(op.f('ix_teams_name'), table_name='teams')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_table('teams')
    # ### end Alembic commands ###
